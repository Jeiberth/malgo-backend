# .github/workflows/deploy.yml
name: Deploy Laravel API to Elastic Beanstalk

on:
  push:
    branches:
      - main # Or your deployment branch (e.g., production)

jobs:
  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    environment: production # Optional: Link to GitHub Environment for protection rules/secrets

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Use latest version

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # Use the same PHP version as your EB environment
        extensions: mbstring, zip, pdo, pdo_mysql, bcmath, curl, openssl # Add extensions your app needs
        tools: composer:v2 # Use Composer v2
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For private repositories if needed

    - name: Install Composer Dependencies
      run: composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader

    # Optional: Build frontend assets if you have any (unlikely for pure API, but example)
    # - name: Setup Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18' # Or your required version
    #     cache: 'npm'
    # - name: Install NPM Dependencies
    #   run: npm install
    # - name: Build Assets
    #   run: npm run build

    - name: Generate Deployment Package
      # Zip all files, including vendor and .ebextensions, excluding .git, .env, node_modules etc.
      run: zip -r ../deploy.zip . -x ".git/*" ".github/*" ".env" ".env.example" "storage/logs/*" "storage/framework/sessions/*" "storage/framework/cache/*" "storage/framework/views/*" "tests/*" "node_modules/*" "docker-compose.yml" "README.md" ".editorconfig" ".styleci.yml" ".gitattributes"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4 # Use latest version
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21 # Use latest version
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-2
        application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.AWS_EB_ENVIRONMENT_NAME }}
        version_label: ${{ github.sha }}-${{ github.run_number }} # Unique version label
        deployment_package: ../deploy.zip
        # Wait for deployment to complete (optional but recommended)
        wait_for_environment_recovery: 600 # Timeout in seconds (e.g., 10 minutes)